package co.uniquindio.semestre7.test;

import static org.junit.Assert.*;

import java.util.List;

import org.junit.Test;

import co.uniquindio.semester7.model.Admin;
import co.uniquindio.semester7.model.Class;
import co.uniquindio.semester7.model.Student;
import co.uniquindio.semester7.model.Teacher;
import co.uniquindio.semester7.model.exception.EntityNullException;
import co.uniquindio.semester7.model.exception.EntityRepeatexception;

public class DatabaseTest {

	private Admin admin = new Admin();

	@Test
	public void test() {

	}

	@Test
	public void addTeacherTest() {
		try {
			admin.addTeacher("Alexandra");
			assertNotNull(admin.getTeacherByName("Alexandra"));
		} catch (EntityRepeatexception e) {
			e.printStackTrace();
		} catch (EntityNullException e) {
			assertTrue("Null", false);
			e.printStackTrace();
		}
	}

	@Test
	public void getTeacherByNameTest() {
		try {
			Teacher teacher = admin.getTeacherByName("Joseph");
			System.out.println(teacher);
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void addStudentTest() {
		try {
			admin.addStudent("Alejandro");
			assertNotNull(admin.getStudentByName("Alejandro"));
		} catch (EntityRepeatexception e) {
			e.printStackTrace();
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void getAllStudentsTest() {
		List<Student> students = admin.getAllStudents();
		for (Student student : students) {
			System.out.println(student);
		}
	}

	@Test
	public void addClassTest() {
		try {
			admin.addClass(3, "Lógica de Programación", "Miercoles", "Viernes", 9, 11, 11, 1);
			assertNotNull(admin.getClassByIdTeacher(3));
		} catch (EntityRepeatexception e) {
			e.printStackTrace();
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void removeClassTest() {
		try {
			admin.removeClass(1);
			assertNull(admin.getTeacherById(1));
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void removeTeacherTest() {
		try {
			admin.removeTeacher(2);
			assertTrue(admin.getAllTeachers().size() == 0);
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void removeStudentTest() {
		try {
			admin.removeStudent(2);
			assertNull(admin.getStudentById(2));
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void removeStudentByNameTest() {
		try {
			admin.removeStudent("Alejandro");
			assertNull(admin.getStudentByName("Alejandro"));
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void addStudentToClassTest() {
		try {
			admin.addStudentToClass(3, 1);
			assertTrue(admin.countStudentInClass(1, 3) == 1);
		} catch (EntityNullException e) {
			e.printStackTrace();
		} catch (EntityRepeatexception e) {
			e.printStackTrace();
		}
	}

	@Test
	public void setTeacherToClassTest() {
		try {
			admin.setTeacherToClass(4, 3);
			assertNotNull(admin.getClassByIdTeacher(4));
		} catch (EntityNullException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void getStudentByClassTest() {

		List<Student> students = admin.getStudentsByClass(3);
		assertTrue(students.size() == 1);
	}
	@Test
	public void getClassesByNameTest() {
		List<Class> classes = admin.getClassesByName("Ingeniería");
		assertTrue(classes.size() == 1);
	}
	@Test
	public void addLinkToClass() {
		try {
			admin.addLinkToClass(3, "www.webex.com");
		} catch (EntityNullException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
